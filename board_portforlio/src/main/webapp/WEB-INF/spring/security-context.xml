<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

<bean id="customAccessDenied" class="org.atomsk.security.CustomAccessDeniedHandler"></bean>
<!-- <bean id="customLoginSuccess" class="org.atomsk.security.CustomLoginSuccessHandler"></bean> -->
<!-- <bean id="customPasswordEncoder" class="org.atomsk.security.CustomNoOpPasswordEncoder"></bean> -->
<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>
<bean id="customUserDetailsService" class="org.atomsk.security.CustomUserDetailsService"></bean>

<security:http auto-config="true" use-expressions="true">
	<security:intercept-url pattern="/sample/all" access="permitAll"/>
	<security:intercept-url pattern="/sample/member" access="hasRole('ROLE_MEMBER')"/>
	<security:intercept-url pattern="/sample/admin" access="hasRole('ROLE_ADMIN')"/>
	
	<!-- 로그인 URL, 설정 -->
	<security:form-login login-page="/customLogin"/> 
	<!-- 로그아웃 URL, 설정 -->
	<security:logout logout-url="/customLogout" invalidate-session="true"
	delete-cookies="remember-me,JSESSION_ID"/>

	<security:access-denied-handler ref="customAccessDenied"/>
	<!-- 자동로그인 설정 -->
	<security:remember-me data-source-ref="dataSource" token-validity-seconds="604800"/>
</security:http>

<security:authentication-manager>
	<security:authentication-provider user-service-ref="customUserDetailsService">
<!-- 	<security:jdbc-user-service data-source-ref="dataSource"
	users-by-username-query="select userid, userpw, enabled from tbl_samplemember where userid = ?"
	authorities-by-username-query="select userid, auth from tbl_samplemember_auth where userid = ?"/> -->
	<!-- <security:password-encoder ref="customPasswordEncoder" /> -->
	<security:password-encoder ref="bcryptPasswordEncoder" />
	
<!-- 		<security:user-service>
		
			<security:user name="member" password="{noop}member" authorities="ROLE_MEMBER"/>
			<security:user name="admin" password="{noop}admin" authorities="ROLE_MEMBER, ROLE_ADMIN"/>
		
		</security:user-service> -->
	
	</security:authentication-provider>

</security:authentication-manager>


</beans>
